name: Deploy pipeline

env:
  AZURE_SITE_STORAGE_ACCOUNT: learnysite
  AZURE_SITE_CONTAINER: sc-website
  AZURE_CDN_PROFILE: learny-cdn
  AZURE_CDN_ENDPOINT: learny-cdn-endpoint
  AZURE_RESOURCE_GROUP: rg-learny
  AZURE_FUNCTIONAPP_NAME: learny-functionapp

on:
  workflow_dispatch:
    inputs:
      component:
        type: choice
        description: What to deploy?
        options: 
        - frontend
        - backend
        - both
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3


    # setup nodejs environment
    - name: Setup Node.js environment
      if: github.event.inputs.component == 'frontend' || github.event.inputs.component == 'both'
      uses: actions/setup-node@v2.1.5
      with:
        node-version: "18.16.1"

    # cache the dependencies to speed up the build
    - name: Cache dependencies
      if: github.event.inputs.component == 'frontend' || github.event.inputs.component == 'both'
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    # install dependencies
    - name: Install dependencies
      if: github.event.inputs.component == 'frontend' || github.event.inputs.component == 'both'
      run: |
        cd frontend
        npm i

    # build the react app
    - name: Build
      if: github.event.inputs.component == 'frontend' || github.event.inputs.component == 'both'
      run: |
        cd frontend
        npm run build

    - uses: azure/login@v1
      with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}


    - name: Upload to blob storage
      if: github.event.inputs.component == 'frontend' || github.event.inputs.component == 'both'
      uses: azure/CLI@v1
      with:
        inlineScript: |
            az storage blob upload-batch --account-name $AZURE_SITE_STORAGE_ACCOUNT --source ./frontend/dist --destination $AZURE_SITE_CONTAINER
    - name: Purge CDN endpoint
      if: github.event.inputs.component == 'frontend' || github.event.inputs.component == 'both'
      uses: azure/CLI@v1
      with:
        inlineScript: |
           az cdn endpoint purge --content-paths  "/*" --profile-name $AZURE_CDN_PROFILE --name $AZURE_CDN_ENDPOINT --resource-group $AZURE_RESOURCE_GROUP


    - name: Setup Python
      if: github.event.inputs.component == 'backend' || github.event.inputs.component == 'both'
      uses: actions/setup-python@v2
      with:
        python-version: 3.11

    - name: Install dependencies
      if: github.event.inputs.component == 'backend' || github.event.inputs.component == 'both'
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Zip Python directory
      if: github.event.inputs.component == 'backend' || github.event.inputs.component == 'both'
      run: |
        zip -r functionapp.zip ./test_func

    - name: Upload artifact
      if: github.event.inputs.component == 'backend' || github.event.inputs.component == 'both'
      uses: actions/upload-artifact@v2
      with:
        name: functionapp
        path: functionapp.zip

    - name: Download artifact
      if: github.event.inputs.component == 'backend' || github.event.inputs.component == 'both'
      uses: actions/download-artifact@v2
      with:
        name: functionapp

    - name: Deploy azure function
      if: github.event.inputs.component == 'backend' || github.event.inputs.component == 'both'
      uses: azure/CLI@v1
      with:
        inlineScript: |
            az functionapp deployment source config-zip -g $AZURE_RESOURCE_GROUP -n $AZURE_FUNCTIONAPP_NAME --src functionapp.zip --build-remote true

    # - name: 'Run Azure Functions Action'
    #   if: github.event.inputs.component == 'backend' || github.event.inputs.component == 'both'
    #   uses: Azure/functions-action@v1
    #   id: fa
    #   with:
    #     app-name: $AZURE_FUNCTIONAPP_NAME
    #     package: functionapp.zip
    #     publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}
    #     respect-pom-xml: false    


  # Azure logout
    - name: logout
      run: |
            az logout
      if: always()


# az functionapp deployment source config-zip -g rg-learny -n learny-functionapp --src build.zip