"""Added user_id col to relevant tables

Revision ID: e34d9d338652
Revises: dda467887516
Create Date: 2024-08-10 14:23:10.045347

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e34d9d338652'
down_revision: Union[str, None] = 'dda467887516'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # Updating system from single user to multi-user...get the first user id as default for all user columns
    user_id = op.get_bind().execute(sa.text("SELECT id FROM users LIMIT 1")).scalar()

    tables_to_update = ['discussions', 'documents', 'flashcards', 'notes', 'tags']
    
    for t in tables_to_update:
        with op.batch_alter_table(t, schema=None) as batch_op:
            batch_op.add_column(sa.Column('user_id', sa.String(), nullable=True))

    op.execute('COMMIT')

    for t in tables_to_update:
        with op.batch_alter_table(t, schema=None) as batch_op:
            batch_op.execute(sa.text(f"UPDATE {t} SET user_id = '{user_id}'"))
            batch_op.alter_column('user_id', nullable=False)
            batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])



def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('tags', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('user_id')

    with op.batch_alter_table('notes', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('user_id')

    with op.batch_alter_table('flashcards', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('user_id')

    with op.batch_alter_table('documents', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('user_id')

    with op.batch_alter_table('discussions', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('user_id')

    # ### end Alembic commands ###
