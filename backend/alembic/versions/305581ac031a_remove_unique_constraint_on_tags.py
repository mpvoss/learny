"""Remove unique constraint on tags

Revision ID: 305581ac031a
Revises: e34d9d338652
Create Date: 2024-08-11 08:11:31.879264

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '305581ac031a'
down_revision: Union[str, None] = 'e34d9d338652'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    engine: sa.Engine = op.get_bind()
    # Postgres...
    if engine.dialect.name != 'sqlite':
        with op.batch_alter_table('tags', schema=None) as batch_op:
            batch_op.drop_constraint('tags_name_key', type_='unique')
    # Sql lite...can't drop constraints so we have to recreate the table
    else:
        op.execute("PRAGMA foreign_keys=off;")
        op.execute("""
            CREATE TABLE tags_new (
                id INTEGER NOT NULL,
                name VARCHAR,
                user_id INTEGER,
                PRIMARY KEY (id),
                FOREIGN KEY(user_id) REFERENCES users(id)
            );
        """)
        op.execute("INSERT INTO tags_new SELECT * FROM tags;")
        op.execute("DROP TABLE tags;")
        op.execute("ALTER TABLE tags_new RENAME TO tags;")
        op.execute("PRAGMA foreign_keys=on;")

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('tags', schema=None) as batch_op:
        batch_op.create_unique_constraint('tags_name_key', ['name'])

    # ### end Alembic commands ###
